Data Science Internship Problem Statement
Title: Fantasy Team Simulation using Player Selection Probabilities
Objective
Build a Python-based solution to simulate approximately 20,000 unique fantasy cricket teams, each consisting of 11 players, using selection probabilities provided in a reference CSV file. The solution should ensure that the frequency of each player’s selection across all teams is closely aligned with their expected perc_selection value. Captain and vice-captain roles are not considered for this problem.
________________


Data Source: A CSV file named player_data_sample.csv is provided. It contains 22 players with the following columns:
* match_code: Identifier for the match (e.g., 10001)
* player_code: Unique code for each player (1-22)
* player_name: Name of the player (e.g., Player_1 to Player_22)
* role: Role of the player (Batsman, Bowler, WK, Allrounder)
* team: Team A or B
* perc_selection: Expected selection probability (range 0 to 1)
* perc_captain: [Ignored in this problem]
* perc_vice_captain: [Ignored in this problem]
________________


Requirements:
1. Team Composition Rules:
   * Each team must consist of exactly 11 unique players.
   * Each team must have at least one player from each role: Batsman, Bowler, WK (Wicket Keeper), and Allrounder.
   * Teams must be unique (no two teams should have the exact same 11 players).
2. Selection Frequency Target:
   * Simulate player selection such that the number of times a player appears across 20,000 teams is approximately equal to perc_selection * 20000.
   * For example, if Player_22 has perc_selection = 0.44, they should be included in approximately 8,800 teams.
   * The simulation should aim to match actual selection frequencies as closely as possible to these targets.


3. Evaluation Metrics:For each player:
* Calculate team_count – number of teams the player appears in.
* Calculate actual_perc_selection = team_count / total_teams.
* Calculate perc_error = (actual_perc_selection - perc_selection) / perc_selection.
A player is considered accurately simulated if their perc_error is within ±5%. To qualify, at least 20 out of 22 players must meet this accuracy threshold.
________________


Final Deliverables (to be submitted):
1. Python or Jupyter Notebook File (.py or .ipynb)
– Your full working script that generates ~20,000 valid teams based on the provided player selection probabilities and role constraints.

2. Team CSV File (team_df.csv)
– A CSV file containing all generated teams.
– Shape: ~20,000 teams × 11 players = approx 220,000 rows, with the following columns:
match_code, player_code, player_name, role, team, perc_selection, team_id

3. Accuracy Summary CSV (accuracy_summary.csv)
– Generated by running your teams through the provided evaluation function below.

4. Printed Output from Evaluation
– Please copy and paste the print statements output (from the evaluation function) into your email or a .txt file. This includes KPIs like number of players within ±5% error, missing role teams, max/min error, etc.
Accuracy Evaluation Function (Required)
Please pass your generated team_df through the Accuracy Evaluation Function before submitting. This will generate and save your accuracy_summary.csv and print the required KPIs.
 Steps to Follow:
   1. Run your team generation logic to get team_df with 20,000+ teams.
   2. Call evaluate_team_accuracy(team_df) in your script.
   3. Save the printed output and generated accuracy_summary.csv as part of your submission.
________________


Bonus (Optional):
   * Optimize the team generation process to minimize memory and computation time.
   * Provide interactive visualizations (e.g., using Plotly or Altair) to show selection distributions.
________________


Submission & Contact
Submit your final Python script or notebook along with the accuracy summary to:
Email: mahesh@apnacricketteam.com
For any questions or clarifications, feel free to contact the same email.
________________


This exercise will test your skills in data handling, constraint-based sampling, probability matching, and basic accuracy measurement.
________________